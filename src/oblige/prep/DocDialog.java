package oblige.prep;

/**
 *
 * @author felix
 */
public class DocDialog extends javax.swing.JDialog {

    private final java.util.ArrayList<Short> arDocs = new java.util.ArrayList();
    
    /**
     * Creates new form NewEarMarkDialog
     * @param opesina
     */
    public DocDialog(String opesina) {
        super();
        initComponents();

        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        javax.swing.InputMap inputMap = getRootPane().getInputMap(javax.swing.JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0), cancelName);
        javax.swing.ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new javax.swing.AbstractAction() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent ae) {
                cancelButtonActionPerformed(ae);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent ae) {
                cancelButtonActionPerformed(null);
            }
        });
        
        OPESINA = opesina;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        javax.swing.JButton cancelButton = new javax.swing.JButton();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        tblDocs = new javax.swing.JTable();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        txtDocNo = new javax.swing.JTextField();
        btnLocate = new javax.swing.JButton();

        setTitle("Insert Documents");
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        okButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        okButton.setText("Accept");
        okButton.setBorderPainted(false);
        okButton.setEnabled(false);
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.setBorderPainted(false);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel2.setForeground(java.awt.Color.blue);
        jLabel2.setText("Select Earmark and Accept when done to decide on selected item.");

        tblDocs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Source", "Doc. No.", "Payee", "Amount", "Particular", "depthead", "posisyon", "deptdate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDocs.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(tblDocs);
        if (tblDocs.getColumnModel().getColumnCount() > 0) {
            tblDocs.getColumnModel().getColumn(0).setPreferredWidth(100);
            tblDocs.getColumnModel().getColumn(1).setPreferredWidth(110);
            tblDocs.getColumnModel().getColumn(2).setPreferredWidth(150);
            tblDocs.getColumnModel().getColumn(3).setPreferredWidth(100);
            tblDocs.getColumnModel().getColumn(4).setPreferredWidth(200);
            tblDocs.getColumnModel().getColumn(5).setMinWidth(0);
            tblDocs.getColumnModel().getColumn(5).setPreferredWidth(0);
            tblDocs.getColumnModel().getColumn(5).setMaxWidth(0);
            tblDocs.getColumnModel().getColumn(6).setMinWidth(0);
            tblDocs.getColumnModel().getColumn(6).setPreferredWidth(0);
            tblDocs.getColumnModel().getColumn(6).setMaxWidth(0);
            tblDocs.getColumnModel().getColumn(7).setMinWidth(0);
            tblDocs.getColumnModel().getColumn(7).setPreferredWidth(0);
            tblDocs.getColumnModel().getColumn(7).setMaxWidth(0);
        }

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setText("Document No.");

        btnLocate.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btnLocate.setText("Locate");
        btnLocate.setBorderPainted(false);
        btnLocate.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnLocate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(okButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDocNo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLocate)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDocNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLocate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton)
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        getRootPane().setDefaultButton(okButton);
        getRootPane().setDefaultButton(btnLocate);

        setSize(new java.awt.Dimension(630, 475));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        javax.swing.table.DefaultTableModel modelo = (javax.swing.table.DefaultTableModel)tblDocs.getModel();
        int selRow = tblDocs.getSelectedRow();
        selRow = tblDocs.convertRowIndexToModel(selRow);
        Documents = new Object[] {
            modelo.getValueAt(selRow, 0),
            modelo.getValueAt(selRow, 1),
            modelo.getValueAt(selRow, 2),
            modelo.getValueAt(selRow, 3),
            modelo.getValueAt(selRow, 4),
            modelo.getValueAt(selRow, 5),
            modelo.getValueAt(selRow, 6),
            modelo.getValueAt(selRow, 7)
        };
        mChoice = true;
        setVisible(false);        
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        mChoice = false;
        setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        String  sqlCmd1 = "SELECT " +
                    "documents.doc_name, " +    // 1
                    "requests.alobs_id, " +     // 2
                    "requests.payee, " +        // 3
                    "requests.amount, " +       // 4
                    "requests.particulars, " +  // 5
                    "requests.depthead, " +     // 6
                    "requests.posisyon, " +     // 7
                    "requests.deptdate " +      // 8
                "FROM " +
                    "obro.requests JOIN buds.documents " +
                    "ON requests.docs = documents.doc_uid " +
                "WHERE " +
                    "(requests.years = ?) AND " +
                    "(requests.obligated = FALSE) AND " +
                    "(requests.offc_code = ?) " +
                "ORDER BY " +
                    "requests.alobs_id";
        java.util.Calendar cal = java.util.Calendar.getInstance();
        cal.setTime(new java.text.SimpleDateFormat("yyyy-MM-dd").parse(System.getProperty("PETSAH"), new java.text.ParsePosition(0)));
        try (budget.DBaseLink jdbc = new budget.DBaseLink();
                java.sql.PreparedStatement psmt1 = jdbc.prepareStatement(sqlCmd1)) {
            
            javax.swing.table.DefaultTableModel modelo = (javax.swing.table.DefaultTableModel)tblDocs.getModel();
            psmt1.setShort (1, (short) cal.get(java.util.Calendar.YEAR));
            psmt1.setString(2, OPESINA);
            try (java.sql.ResultSet rst = psmt1.executeQuery()) {
                while (rst.next()) {
                    Object[] rowData = {
                        rst.getString(1),
                        rst.getString(2),
                        rst.getString(3),
                        rst.getDouble(4),
                        rst.getString(5),
                        rst.getString(6),
                        rst.getString(7),
                        rst.getDate  (8)
                    };
                    modelo.insertRow(modelo.getRowCount(), rowData);
                }
            }
            

        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), getTitle(), javax.swing.JOptionPane.ERROR_MESSAGE);
            java.util.logging.Logger.getLogger(DocDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } finally {
            tblDocs.getSelectionModel().addListSelectionListener(new javax.swing.event.ListSelectionListener() {
                @Override
                public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                    if (evt.getValueIsAdjusting()) return;
                    okButton.setEnabled(tblDocs.getSelectedRow() >= 0);
                }
            });
        }
    }//GEN-LAST:event_formWindowOpened

    private void btnLocateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocateActionPerformed
        // TODO add your handling code here:
        //javax.swing.JOptionPane.showMessageDialog(this, "Test");
        String  sqlCmd1 = "SELECT " +
                    "documents.doc_name, " +    // 1
                    "requests.alobs_id, " +     // 2
                    "requests.payee, " +        // 3
                    "requests.amount, " +       // 4
                    "requests.particulars, " +  // 5
                    "requests.depthead, " +     // 6
                    "requests.posisyon, " +     // 7
                    "requests.deptdate " +      // 8
                "FROM " +
                    "obro.requests JOIN buds.documents " +
                    "ON requests.docs = documents.doc_uid " +
                "WHERE " +
                    "(requests.years = ?) AND " +
                    "(requests.obligated = FALSE) AND " +
                    "(requests.alobs_id LIKE ?) AND " +
                    "(requests.offc_code = ?) " +
                "ORDER BY " +
                    "requests.alobs_id";
        java.util.Calendar cal = java.util.Calendar.getInstance();
        cal.setTime(new java.text.SimpleDateFormat("yyyy-MM-dd").parse(System.getProperty("PETSAH"), new java.text.ParsePosition(0)));
        try (budget.DBaseLink jdbc = new budget.DBaseLink();
                java.sql.PreparedStatement psmt1 = jdbc.prepareStatement(sqlCmd1)) {
            
            javax.swing.table.DefaultTableModel modelo = (javax.swing.table.DefaultTableModel)tblDocs.getModel();
            modelo.setRowCount(0);
            psmt1.setShort (1, (short) cal.get(java.util.Calendar.YEAR));
            psmt1.setString(2, "%" + txtDocNo.getText().toUpperCase() + "%");
            psmt1.setString(3, OPESINA);
            try (java.sql.ResultSet rst = psmt1.executeQuery()) {
                while (rst.next()) {
                    Object[] rowData = {
                        rst.getString(1),
                        rst.getString(2),
                        rst.getString(3),
                        rst.getDouble(4),
                        rst.getString(5),
                        rst.getString(6),
                        rst.getString(7),
                        rst.getDate  (8)
                    };
                    modelo.insertRow(modelo.getRowCount(), rowData);
                }
            }
            

        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), getTitle(), javax.swing.JOptionPane.ERROR_MESSAGE);
            java.util.logging.Logger.getLogger(DocDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } finally {

        }
    }//GEN-LAST:event_btnLocateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLocate;
    private javax.swing.JButton okButton;
    private javax.swing.JTable tblDocs;
    private javax.swing.JTextField txtDocNo;
    // End of variables declaration//GEN-END:variables

    private final String OPESINA;
    
    private Boolean mChoice;
    private Object[] Documents;
    

    public Boolean isChoice() {return mChoice;}
    public Object[] getDocuments() {return Documents;}
    
}
