package earmark.prep;

/**
 *
 * @author felix
 */
public class TransDialog extends javax.swing.JDialog {

    private final java.util.ArrayList<Integer> aBasis = new java.util.ArrayList();
    
    /**
     * Creates new form NewEarMarkDialog
     */
    public TransDialog() {
        super();
        initComponents();

        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        javax.swing.InputMap inputMap = getRootPane().getInputMap(javax.swing.JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0), cancelName);
        javax.swing.ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new javax.swing.AbstractAction() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent ae) {
                cancelButtonActionPerformed(ae);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent ae) {
                cancelButtonActionPerformed(null);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        javax.swing.JButton cancelButton = new javax.swing.JButton();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        cboBasis = new organize.JComboDynamicWidth();
        cboFund = new organize.JComboDynamicWidth();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        ScrollPane = new javax.swing.JScrollPane();
        jLabel4 = new javax.swing.JLabel();

        setTitle("Transaction Dialog");
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        okButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        okButton.setText("Accept");
        okButton.setBorderPainted(false);
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.setBorderPainted(false);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setText("Legal Basis");

        cboBasis.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        cboFund.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cboFund.setRenderer(new HTMLRenderer());
        cboFund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboFundActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel2.setText("Fund Source");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setText("Resp. Center");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel4.setForeground(java.awt.Color.blue);
        jLabel4.setText("Select Expense and Accept when done to decide on selected item.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboBasis, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ScrollPane)
                            .addComponent(cboFund, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                        .addComponent(okButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cboBasis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboFund, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 384, Short.MAX_VALUE))
                    .addComponent(ScrollPane))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton)
                    .addComponent(jLabel4))
                .addContainerGap())
        );

        getRootPane().setDefaultButton(okButton);

        setSize(new java.awt.Dimension(685, 544));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        Item item = (Item)cboFund.getSelectedItem();
        mChoice = true;
        mLegalBasis = new Object[]{aBasis.get(cboBasis.getSelectedIndex()), cboBasis.getSelectedItem()};
        mFunding = new Object[]{item.getId(), item.getDescription()};

        int rowIndex = jttOffice.getSelectedRow();
        rowIndex = jttOffice.convertRowIndexToModel(rowIndex);
        earmark.Opesina selectedNode = (earmark.Opesina)jttOffice.getPathForRow(rowIndex).getLastPathComponent();
        earmark.OfficeHeader offcHead = (earmark.OfficeHeader)jttOffice.getTreeTableModel();
        if (offcHead.isLeaf(selectedNode)) {
            mNapiliNode = selectedNode;
            setVisible(false);
        } else
            classes.MsgBox.showWarning(this, "Select SUB-OFFICE only.", getTitle());
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        mChoice = false;
        setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        try (budget.DBaseLink jdbc = new budget.DBaseLink();
                java.sql.Statement stmt = jdbc.createStatement(java.sql.ResultSet.TYPE_SCROLL_INSENSITIVE, java.sql.ResultSet.CONCUR_READ_ONLY)) {
/************* LEGAL BASIS *************/
            java.util.Calendar caldate = java.util.Calendar.getInstance();
            caldate.setTime(new java.text.SimpleDateFormat("yyyy-MM-dd").parse(System.getProperty("PETSAH")));
            int year = caldate.get(java.util.Calendar.YEAR);
            try (java.sql.ResultSet rst = stmt.executeQuery(
                    "SELECT " +
                        "legal_uid, " +
                        "legal_desc " +
                    "FROM " +
                        "buds.ordinances " +
                    "WHERE " +
                        "(" + year + " BETWEEN legal_year AND (legal_year + span_to - 1)) " +
                    "ORDER BY " +
                        "entered"
            )) {
                while(rst.next()) {
                    aBasis.add(rst.getInt(1));
                    cboBasis.addItem(rst.getString(2));
                }
            }
/************* FUND SOURCE *************/
            try (java.sql.ResultSet rst = stmt.executeQuery(
                    "SELECT " +
                        "centre_uid, " +
                        "description " +
                    "FROM " +
                        "buds.fund_control " +
                    "WHERE " +
                        "(years = " + year + ") AND " +
                        "(funds_id <> 0) AND (services = 0) " +
                    "ORDER BY " +
                        "funds_id"
            )) {
                while(rst.next()) 
                    cboFund.addItem(new Item(rst.getShort(1), rst.getString(2)));
            }


            
        } catch (Exception ex) {
            classes.MsgBox.showError(this, ex.getMessage(), getTitle());
            java.util.logging.Logger.getLogger(TransDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } finally {
            
        }
    }//GEN-LAST:event_formWindowOpened

    private void cboFundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboFundActionPerformed
        // TODO add your handling code here:
        okButton.setEnabled(false);
        if (cboFund.getSelectedIndex() < 0) return;
        Item item = (Item)cboFund.getSelectedItem();

        java.util.List<earmark.Opesina> office = new java.util.ArrayList();
        office.clear();
        try (budget.DBaseLink jdbc = new budget.DBaseLink();
                java.sql.Statement stmt = jdbc.createStatement(java.sql.ResultSet.TYPE_SCROLL_INSENSITIVE, java.sql.ResultSet.CONCUR_READ_ONLY);
                java.sql.ResultSet rst = stmt.executeQuery(
                    "SELECT " +
                        "centre_uid, " +
                        "resp_id, " +
                        "resp_sub, " +
                        "description, " +
                        //"CASE resp_sub WHEN 0 THEN '' ELSE SUBSTRING(centre_uid, 1, 9) END, " +
                        "request_by " +
                    "FROM " +
                        "buds.fund_central " +
                    "WHERE " +
                        "(funds_id = " + item.getId() + ") AND " +
                        "(resp_id <> 0) AND (programs = 0) " +
                    "ORDER BY " +
                        "centre_uid")) {
            java.util.List<earmark.Opesina> lista = new java.util.ArrayList();
            while (rst.next()) {
                Short subid = rst.getShort(3);
                if (subid.equals((short) 0)) {
                    office.add(new earmark.Opesina(
                            rst.getString(1),
                            rst.getString(4),
                            rst.getInt(2),
                            (subid.equals((short) 0) ? null : subid),
                            rst.getString(5),
                            null));
                    if (office.size() > 1) office.get(office.size() - 2).setSubOffcList(lista);
                    lista = new java.util.ArrayList();
                } else {
                    lista.add(new earmark.Opesina(
                            rst.getString(1),
                            rst.getString(4),
                            rst.getInt(2),
                            (subid.equals((short) 0) ? null : subid),
                            rst.getString(5),
                            null));
                }
            }
            if (office.size() > 0) office.get(office.size() - 1).setSubOffcList(lista);


            treeTableModel = new earmark.OfficeHeader(office);
            jttOffice = new org.jdesktop.swingx.JXTreeTable(treeTableModel);
            //jttOffice.setShowGrid(true, true);
            jttOffice.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
            jttOffice.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
            if (jttOffice.getColumnModel().getColumnCount() > 0) {
//                jttOffice.getColumnExt(0).setPreferredWidth(150);
                jttOffice.getColumnModel().getColumn(0).setPreferredWidth(400);
                jttOffice.getColumnModel().getColumn(1).setPreferredWidth(65);
                jttOffice.getColumnModel().getColumn(1).setCellRenderer(new tables.LabelColumnRender(tables.LabelColumnRender.CENTER));
                jttOffice.getColumnModel().getColumn(2).setPreferredWidth(50);
                jttOffice.getColumnModel().getColumn(2).setCellRenderer(new tables.LabelColumnRender(tables.LabelColumnRender.CENTER));
                jttOffice.getColumnModel().getColumn(3).setMinWidth(0);
                jttOffice.getColumnModel().getColumn(3).setPreferredWidth(0);
                jttOffice.getColumnModel().getColumn(3).setMaxWidth(0);
            }            
            jttOffice.setRootVisible(false);  // hide the root
            jttOffice.setEditable(false);
            jttOffice.getSelectionModel().addListSelectionListener(new javax.swing.event.ListSelectionListener() {
                @Override
                public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                    if (evt.getValueIsAdjusting()) return;
                    okButton.setEnabled(jttOffice.getSelectedRow() >= 0);
                }
            });
            /*jttOffice.addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jttOffice_mouseClicked(evt);
                }
            });
            jttOffice.addKeyListener(new java.awt.event.KeyAdapter() {
                @Override
                public void keyPressed(java.awt.event.KeyEvent evt) {
                    jttOffice_keyPressed(evt);
                }
            });*/
            ScrollPane.setViewportView(jttOffice);

            
        } catch (Exception ex) {
            classes.MsgBox.showError(this, ex.getMessage(), getTitle());
            java.util.logging.Logger.getLogger(TransDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } finally {

        }
    }//GEN-LAST:event_cboFundActionPerformed

    
    /*private void jttOffice_mouseClicked(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            int rowIndex = jttOffice.rowAtPoint(evt.getPoint());
            transact.Opesina selectedNode = (transact.Opesina)jttOffice.getPathForRow(rowIndex).getLastPathComponent();
            System.out.println(selectedNode.getUID());
        }
    }
    private void jttOffice_keyPressed(java.awt.event.KeyEvent evt) {                                   
        // TODO add your handling code here:
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_SPACE) {
            int rowIndex = jttOffice.getSelectedRow();
            rowIndex = jttOffice.convertRowIndexToModel(rowIndex);
            transact.Opesina selectedNode = (transact.Opesina)jttOffice.getPathForRow(rowIndex).getLastPathComponent();
            System.out.println(selectedNode.getUID());
        }
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JComboBox cboBasis;
    private javax.swing.JComboBox<Item> cboFund;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables

    private org.jdesktop.swingx.JXTreeTable jttOffice;
    private earmark.OfficeHeader treeTableModel;
    
    private Boolean  mChoice;
    private Object[] mLegalBasis;
    private Object[] mFunding;
    private earmark.Opesina mNapiliNode;

    public Boolean  isChoice() {return mChoice;}
    public Object[] getLegalBasis() {return mLegalBasis;}
    public Object[] getFunding() {return mFunding;}
    public earmark.Opesina  getNapiliNode() {return mNapiliNode;}
    
    
    
    
    
    private class Item {

        private final Short mID;
        private final String mDescription;

        public Item(Short id, String desc) {mID = id; mDescription = desc;}
        public Short getId() {return mID;}
        public String getDescription() {return mDescription;}

        @Override
        public String toString() {return mDescription;}
    }
    
    private class HTMLRenderer extends javax.swing.DefaultListCellRenderer {
        private static final String START = "<html><table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"><tr><td width=70>";
        private static final String MIDDLE = "</td><td width=520>";
        private static final String END = "</td></tr></table></html>";

        @Override
        public java.awt.Component getListCellRendererComponent(javax.swing.JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);

            if (value instanceof Item) {
                Item item = (Item) value;
                setText(START + item.getId() + MIDDLE + item.getDescription() + END);
            }
            return this;
        }
    }
}
