package earmark.prep;

/**
 *
 * @author felix
 */
public class OpenDialog extends javax.swing.JDialog {

    /**
     * Creates new form NewmEarMarkDialog
     */
    public OpenDialog() {
        super();
        initComponents();

        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        javax.swing.InputMap inputMap = getRootPane().getInputMap(javax.swing.JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0), cancelName);
        javax.swing.ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new javax.swing.AbstractAction() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent ae) {
                cancelButtonActionPerformed(ae);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent ae) {
                cancelButtonActionPerformed(null);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        javax.swing.JButton cancelButton = new javax.swing.JButton();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        tblOpen = new javax.swing.JTable();
        btnLocate = new javax.swing.JButton();
        txtLocate = new javax.swing.JTextField();
        chkCancel = new javax.swing.JCheckBox();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();

        setTitle("New Earmark Entry");
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        okButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        okButton.setText("Accept");
        okButton.setBorderPainted(false);
        okButton.setEnabled(false);
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cancelButton.setText("Close");
        cancelButton.setBorderPainted(false);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setText("Particular");

        tblOpen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Earmark #", "Date", "Particular", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblOpen.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblOpen);
        if (tblOpen.getColumnModel().getColumnCount() > 0) {
            tblOpen.getColumnModel().getColumn(0).setPreferredWidth(112);
            tblOpen.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblOpen.getColumnModel().getColumn(2).setPreferredWidth(300);
            tblOpen.getColumnModel().getColumn(3).setPreferredWidth(70);
        }

        btnLocate.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btnLocate.setText("Locate");
        btnLocate.setBorderPainted(false);
        btnLocate.setFocusable(false);
        btnLocate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocateActionPerformed(evt);
            }
        });

        chkCancel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        chkCancel.setText("Cancelled");
        chkCancel.setFocusable(false);
        chkCancel.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel2.setText("Include");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setForeground(java.awt.Color.blue);
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Select all statuses when applicable.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(11, 11, 11)
                        .addComponent(okButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLocate)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(chkCancel)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLocate)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnLocate)
                        .addComponent(txtLocate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(chkCancel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton)
                    .addComponent(jLabel3))
                .addContainerGap())
        );

        getRootPane().setDefaultButton(okButton);

        setSize(new java.awt.Dimension(582, 448));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        int rowSel = tblOpen.getSelectedRow();
        rowSel = tblOpen.convertRowIndexToModel(rowSel);
        javax.swing.table.DefaultTableModel modelo = (javax.swing.table.DefaultTableModel)tblOpen.getModel();
        mEarMark = modelo.getValueAt(rowSel, 0).toString();

        mNapili = true;
        setVisible(false);
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        mNapili = false;
        setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        tblOpen.getSelectionModel().addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            @Override
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                if (evt.getValueIsAdjusting()) return;
                okButton.setEnabled(tblOpen.getSelectedRow() >= 0);
            }
        });
        reQuery();
    }//GEN-LAST:event_formWindowOpened

    private void btnLocateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocateActionPerformed
        // TODO add your handling code here:
        reQuery();
    }//GEN-LAST:event_btnLocateActionPerformed

    private void reQuery() {
        String sqlCmd = 
                "SELECT " +
                    "earmrk_id, " +
                    "transact, " +
                    "particular, " +
                    "status " +
                "FROM " +
                    "buds.earmark_main " +
                "WHERE " +
                    "(UPPER(particular) LIKE ?) " +
                    (chkCancel.isSelected() ? ", AND (status = ?) " : "") +
                "ORDER BY " +
                    "status, " +
                    "transact, " +
                    "earmrk_id";
        try (budget.DBaseLink jdbc = new budget.DBaseLink()) {
            try (java.sql.PreparedStatement psmt = jdbc.prepareStatement(sqlCmd)) {
                int index = 1;
                psmt.setString(index, "%" + txtLocate.getText().toUpperCase() + "%");
                if (chkCancel.isSelected()) {
                    index++;
                    psmt.setInt(index, 2);
                }
                javax.swing.table.DefaultTableModel modelo = (javax.swing.table.DefaultTableModel)tblOpen.getModel();
                modelo.setRowCount(0);
                try (java.sql.ResultSet rst = psmt.executeQuery()) {
                    while(rst.next()) {
                        Object[] rowData = {
                            rst.getString(1),
                            new java.text.SimpleDateFormat("MM/dd/yyyy").format(rst.getDate(2)),
                            rst.getString(3),
                            (rst.getShort(4) == 0 ? "For Approval" : rst.getShort(4) == 1 ? "Approved" : rst.getShort(4) == 2 ? "Cancelled" : "Unknown")
                        };
                        modelo.addRow(rowData);
                    }
                }
            }


        } catch (Exception ex) {
            classes.MsgBox.showError(this, ex.getMessage(), getTitle());
            java.util.logging.Logger.getLogger(OpenDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } finally {
            
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLocate;
    private javax.swing.JCheckBox chkCancel;
    private javax.swing.JButton okButton;
    private javax.swing.JTable tblOpen;
    private javax.swing.JTextField txtLocate;
    // End of variables declaration//GEN-END:variables

    private Boolean mNapili;
    private String  mEarMark;
    
    public Boolean isChoice() {return mNapili;}
    public String getEarMark() {return mEarMark;}
    
}
