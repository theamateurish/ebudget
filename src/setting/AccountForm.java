package setting;

/**
 *
 * @author felix
 */
public class AccountForm extends javax.swing.JInternalFrame {

    /**
     * Creates new form TitleForm
     */
    public AccountForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        tblTitle = new javax.swing.JTable();
        cboHeader = new javax.swing.JComboBox();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        javax.swing.JMenuBar MenuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu RecordMenu = new javax.swing.JMenu();
        SaveItem = new javax.swing.JMenuItem();
        javax.swing.JMenu NavigateMenu = new javax.swing.JMenu();
        AppendItem = new javax.swing.JMenuItem();
        EraseItem = new javax.swing.JMenuItem();
        javax.swing.JMenu FormMenu = new javax.swing.JMenu();
        CloseItem = new javax.swing.JMenuItem();

        setClosable(true);
        setTitle("Account Entry");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        tblTitle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "asdfasdf"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblTitle.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblTitle.getModel().addTableModelListener(new LamisaModeloNaminaw());
        jScrollPane1.setViewportView(tblTitle);
        if (tblTitle.getColumnModel().getColumnCount() > 0) {
            tblTitle.getColumnModel().getColumn(0).setMinWidth(100);
            tblTitle.getColumnModel().getColumn(0).setPreferredWidth(100);
            tblTitle.getColumnModel().getColumn(0).setMaxWidth(100);
        }
        tblTitle.getColumnModel().getColumn(0).setPreferredWidth(60);
        tblTitle.getColumnModel().getColumn(1).setPreferredWidth(450);
        tblTitle.getColumnModel().getColumn(2).setMinWidth(0);
        tblTitle.getColumnModel().getColumn(2).setPreferredWidth(0);
        tblTitle.getColumnModel().getColumn(2).setMaxWidth(0);

        cboHeader.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cboHeader.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Personal Services", "Maintenance and Other Operating Expenses", "Financial Expenses", "Capital Outlay" }));
        cboHeader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboHeaderActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setText("HEADER");

        MenuBar.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        RecordMenu.setText("RECORD");
        RecordMenu.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        SaveItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        SaveItem.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        SaveItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imahen/save.png"))); // NOI18N
        SaveItem.setText("Save/Update");
        SaveItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveItemActionPerformed(evt);
            }
        });
        RecordMenu.add(SaveItem);

        MenuBar.add(RecordMenu);

        NavigateMenu.setText("NAVIGATE");
        NavigateMenu.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        AppendItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ADD, java.awt.event.InputEvent.CTRL_MASK));
        AppendItem.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        AppendItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imahen/plus.png"))); // NOI18N
        AppendItem.setText("Append");
        AppendItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AppendItemActionPerformed(evt);
            }
        });
        NavigateMenu.add(AppendItem);

        EraseItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_SUBTRACT, java.awt.event.InputEvent.CTRL_MASK));
        EraseItem.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        EraseItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imahen/remove.png"))); // NOI18N
        EraseItem.setText("Remove");
        EraseItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EraseItemActionPerformed(evt);
            }
        });
        NavigateMenu.add(EraseItem);

        MenuBar.add(NavigateMenu);

        FormMenu.setText("FORM");
        FormMenu.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        CloseItem.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        CloseItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imahen/close.gif"))); // NOI18N
        CloseItem.setText("Close");
        CloseItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseItemActionPerformed(evt);
            }
        });
        FormMenu.add(CloseItem);

        MenuBar.add(FormMenu);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cboHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CloseItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseItemActionPerformed
        // TODO add your handling code here:
        doDefaultCloseAction();
    }//GEN-LAST:event_CloseItemActionPerformed

    private void AppendItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AppendItemActionPerformed
        // TODO add your handling code here:
        javax.swing.table.DefaultTableModel modelo = (javax.swing.table.DefaultTableModel) tblTitle.getModel();
        modelo.addRow(new Object[]{null});
        tblTitle.scrollRectToVisible(tblTitle.getCellRect(modelo.getRowCount() - 1, 0, true));
    }//GEN-LAST:event_AppendItemActionPerformed

    private void EraseItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EraseItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EraseItemActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        ExpenseLoader();
    }//GEN-LAST:event_formInternalFrameOpened

    private void SaveItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveItemActionPerformed
        // TODO add your handling code here:
        int index = cboHeader.getSelectedIndex();
        try (java.sql.Connection jdbc = new budget.DBaseLink();
                java.sql.Statement smt = jdbc.createStatement()) {
            javax.swing.table.DefaultTableModel modelo = (javax.swing.table.DefaultTableModel) tblTitle.getModel();
            for (short abc = 0; abc < modelo.getRowCount(); abc++) {
                dbase.SQLExecute saver = new dbase.SQLExecute("bud.major_accnt");
                saver.FieldName("accnt_code",  !NUMERIC, enums.Take.InsertOnly,   CONDITION, modelo.getValueAt(abc, 0));
                saver.FieldName("description", !NUMERIC, enums.Take.InsertUpdate, modelo.getValueAt(abc, 1).toString().replaceAll("'", "''"));
                saver.FieldName("hdr_id",       NUMERIC, enums.Take.InsertUpdate, HDR_ID[index]);
                String command = saver.Perform(enums.Fire.doUpdate);
                int test = smt.executeUpdate(command);
                if (test == 0) {
                    command = saver.Perform(enums.Fire.doInsert);
                    smt.executeUpdate(command);
                }
            }
            javax.swing.JOptionPane.showMessageDialog(this, "Record saved successfully.", title, javax.swing.JOptionPane.INFORMATION_MESSAGE);


        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), title, javax.swing.JOptionPane.ERROR_MESSAGE);
            java.util.logging.Logger.getLogger(AccountForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } finally {
        }
    }//GEN-LAST:event_SaveItemActionPerformed

    private void cboHeaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboHeaderActionPerformed
        // TODO add your handling code here:
        ExpenseLoader();
    }//GEN-LAST:event_cboHeaderActionPerformed

    private void ExpenseLoader() {
        int index = cboHeader.getSelectedIndex();
        try (java.sql.Connection jdbc = new budget.DBaseLink();
                java.sql.Statement smt = jdbc.createStatement();
            java.sql.ResultSet rst = smt.executeQuery(
                    "SELECT " +
                        "accnt_code, " +
                        "description " +
                    "FROM " +
                        "bud.major_accnt " +
                    "WHERE " +
                        "(hdr_id = " + HDR_ID[index] + ") " +
                    "ORDER BY " +
                        "description")) {
            javax.swing.table.DefaultTableModel modelo = (javax.swing.table.DefaultTableModel) tblTitle.getModel();
            modelo.setRowCount(0);
            while (rst.next()) {
                Object[] arRowData = {rst.getString(1), rst.getString(2), HDR_ID[index]};
                modelo.addRow(arRowData);
            }


        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), title, javax.swing.JOptionPane.ERROR_MESSAGE);
            java.util.logging.Logger.getLogger(AccountForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } finally {
            // /* */ 
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AppendItem;
    private javax.swing.JMenuItem CloseItem;
    private javax.swing.JMenuItem EraseItem;
    private javax.swing.JMenuItem SaveItem;
    private javax.swing.JComboBox cboHeader;
    private javax.swing.JTable tblTitle;
    // End of variables declaration//GEN-END:variables
    
    private final Short[] HDR_ID = {30, 31, 32, 16};
    private final boolean NUMERIC = true, CONDITION = true;

    private class LamisaModeloNaminaw implements javax.swing.event.TableModelListener {

        @Override
        public void tableChanged(javax.swing.event.TableModelEvent tme) {
            //javax.swing.table.DefaultTableModel modelo = (javax.swing.table.DefaultTableModel) tblTitle.getModel();
            System.out.println(tme.getType());
        }
    }

    private final javax.swing.table.DefaultTableModel MyTableModel = new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Acct #", "Titles", "hdr"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Short.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                if (getValueAt(rowIndex, 2) == null)
                    return canEdit [columnIndex];
                else
                    return columnIndex == 1;
            }

            @Override
            public void setValueAt(Object aValue, int row, int column) {
                
                super.setValueAt(aValue, row, column);
            }
        };

//    private class MyTableCellEditor extends javax.swing.AbstractCellEditor implements javax.swing.table.TableCellEditor {
//
//        javax.swing.JComponent component = new javax.swing.JTextField();
//
//        @Override
//        public java.awt.Component getTableCellEditorComponent(javax.swing.JTable table, Object value, boolean isSelected, int rowIndex, int vColIndex) {
//
//            ((javax.swing.JTextField) component).setText(value.toString());
//
//            return component;
//        }
//
//        @Override
//        public Object getCellEditorValue() {
//            return ((javax.swing.JTextField) component).getText();
//        }
//    }
}
